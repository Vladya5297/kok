{"version":3,"sources":["App.js","reportWebVitals.js","index.js","App.module.css"],"names":["Barrier","number","remove","P","setP","useState","um","setUm","fm","setFm","recalculateP","NaN","className","classes","barrier","type","min","value","onChange","target","parseFloat","onClick","App","id","barriers","setBarriers","total","reduce","accumulator","map","index","filter","deleteBarrier","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2KAGMA,EAAU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,EAAGC,EAAW,EAAXA,KAAW,EAC3BC,mBAAS,GADkB,mBACxCC,EADwC,KACpCC,EADoC,OAE3BF,mBAAS,GAFkB,mBAExCG,EAFwC,KAEpCC,EAFoC,KAIzCC,EAAe,SAACJ,EAAIE,GAEtBJ,EADS,IAAPE,GAAmB,IAAPE,EACTG,IAEC,EAAIL,GAAO,EAAIA,EAAK,EAAIE,KAIlC,OACE,sBAAKI,UAAWC,IAAQC,QAAxB,UACE,0FAAmBb,KACnB,sCACA,uBACEc,KAAK,SACLC,IAAK,EACLC,MAAOX,EACPY,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACLF,EAAQG,WAAWD,EAAOF,OAChCV,EAAMU,GACNP,EAAaO,EAAOT,MAExB,sCACA,uBACEO,KAAK,SACLC,IAAK,EACLC,MAAOT,EACPU,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACLF,EAAQG,WAAWD,EAAOF,OAChCR,EAAMQ,GACNP,EAAaJ,EAAIW,MAErB,+DAAiBd,GAAK,sFACV,IAAXF,GAAgB,wBAAQoB,QAASnB,EAAjB,4DAkDRoB,EA7CH,WAAO,IAAD,EACgBjB,mBAAS,CAAC,CAAEkB,GAAI,KADhC,mBACTC,EADS,KACCC,EADD,KAiBVC,EAAQ,EAAIF,EAASG,QAAO,SAACC,EAAad,GAE9C,OADAc,GAA4Bd,EAAQX,IAEnC,GAEH,OACE,gCACGqB,EAASK,KAAI,WAAYC,GAAZ,IAAGP,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,EAAP,OACZ,cAAC,EAAD,CAEEF,OAAQ6B,EAAQ,EAChB5B,OAAQ,YAzBM,SAACqB,GACrBE,EAAYD,EAASO,QAAO,SAAAjB,GAAO,OAAIA,EAAQS,KAAOA,MAwBhCS,CAAcT,IAC9BnB,KAAM,SAACD,GAAD,OAtBD,SAACoB,EAAIpB,GAChBsB,EAAYD,EAASK,KAAI,SAAAf,GACvB,OAAIA,EAAQS,KAAOA,EACV,CAAEA,KAAIpB,KAENW,MAiBQV,CAAKmB,EAAIpB,IACtBA,EAAGA,GAJEoB,MAOT,uBACER,KAAK,SACLE,MAAM,oGACNI,QAAS,WACPI,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAED,GAAIC,EAASS,OAAS,SAGtD,qBAAKrB,UAAWC,IAAQa,MAAxB,yCAA0CA,GAAS,6HCxE1CQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCdAc,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,sB","file":"static/js/main.6e5f1268.chunk.js","sourcesContent":["import { useState } from 'react'\nimport classes from './App.module.css'\n\nconst Barrier = ({ number, remove, P, setP }) => {\n  const [um, setUm] = useState(0)\n  const [fm, setFm] = useState(0)\n  \n  const recalculateP = (um, fm) => {\n    if (um === 0 || fm === 0) {\n      setP(NaN)\n    } else {\n      setP((1 / um) / (1 / um + 1 / fm))\n    }\n  }\n\n  return (\n    <div className={classes.barrier}>\n      <span>{`Преграда ${number}`}</span>\n      <span>um</span>\n      <input\n        type='number'\n        min={0}\n        value={um}\n        onChange={({ target }) => {\n          const value = parseFloat(target.value)\n          setUm(value)\n          recalculateP(value, fm)\n        }}/>\n      <span>fm</span>\n      <input\n        type='number'\n        min={0}\n        value={fm}\n        onChange={({ target }) => {\n          const value = parseFloat(target.value)\n          setFm(value)\n          recalculateP(um, value)\n        }}/>\n      <span>{`Pнсд = ${P || 'Деление на ноль'}`}</span>\n      {number !== 1 && <button onClick={remove}>Удалить</button>}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [barriers, setBarriers] = useState([{ id: 1 }])\n  \n  const deleteBarrier = (id) => {\n    setBarriers(barriers.filter(barrier => barrier.id !== id))\n  }\n\n  const setP = (id, P) => {\n    setBarriers(barriers.map(barrier => {\n      if (barrier.id === id) {\n        return { id, P }\n      } else {\n        return barrier\n      }\n    }))\n  }\n\n  const total = 1 - barriers.reduce((accumulator, barrier) => {\n    accumulator = accumulator * barrier.P\n    return accumulator\n  }, 1)\n\n  return (\n    <div>\n      {barriers.map(({ id, P }, index) => (\n        <Barrier\n          key={id}\n          number={index + 1}\n          remove={() => { deleteBarrier(id) }}\n          setP={(P) => setP(id, P)}\n          P={P}\n        />\n      ))}\n      <input\n        type='button'\n        value='Добавить преграду'\n        onClick={() => {\n          setBarriers([...barriers, { id: barriers.length + 1 }])\n        }}\n      />\n      <div className={classes.total}>{`Pзащ = ${total || 'Невозможно вычислить'}`}</div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barrier\":\"App_barrier__3Rcoh\",\"total\":\"App_total__Nr4AS\"};"],"sourceRoot":""}
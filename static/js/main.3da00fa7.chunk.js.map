{"version":3,"sources":["App.js","reportWebVitals.js","index.js","App.module.css"],"names":["Barrier","number","remove","P","setP","withH","H","checked","setChecked","barriers","useState","um","setUm","fm","setFm","rangeP","setRangeP","useEffect","NaN","slice","reduce","accumulator","barrier","className","classes","type","onChange","target","disabled","min","value","parseFloat","index","toFixed","onClick","App","id","setBarriers","setWithH","setH","total","map","filter","deleteBarrier","Object","assign","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2KAGMA,EAAU,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,OAAQC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,EAAGC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,EAAGC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAAe,EACpEC,mBAAS,GAD2D,mBACjFC,EADiF,KAC7EC,EAD6E,OAEpEF,mBAAS,GAF2D,mBAEjFG,EAFiF,KAE7EC,EAF6E,OAG5DJ,mBAAS,GAHmD,mBAGjFK,EAHiF,KAGzEC,EAHyE,KAuBxF,OAlBAC,qBAAU,WACG,IAAPN,GAAmB,IAAPE,GAAaR,GAAe,IAANC,EACpCF,EAAKc,KAKLd,EAHeC,EACV,EAAIM,GAAO,EAAIA,EAAK,EAAIE,EAAK,EAAIP,GACjC,EAAIK,GAAO,EAAIA,EAAK,EAAIE,MAG9B,CAACP,EAAGD,EAAOM,EAAIE,IAElBI,qBAAU,WACR,IAAMF,EAASN,EAASU,MAAM,EAAGlB,GAAQmB,QAAO,SAACC,EAAaC,GAC5D,OAAOD,EAAcC,EAAQnB,IAC5B,GACHa,EAAUD,MAIV,sBAAKQ,UAAWC,IAAQF,QAAxB,UACE,uBACEG,KAAK,WACLC,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXnB,EAAWmB,EAAOpB,UAEpBqB,SAAqB,IAAX3B,EACVM,QAASA,IAEX,0FAAmBN,KACnB,sCACA,uBACEwB,KAAK,SACLI,IAAK,EACLC,MAAOnB,EACPe,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACLG,EAAQC,WAAWJ,EAAOG,OAChClB,EAAMkB,MAEV,sCACA,uBACEL,KAAK,SACLI,IAAK,EACLC,MAAOjB,EACPa,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACLG,EAAQC,WAAWJ,EAAOG,OAChChB,EAAMgB,MAEV,iCACG,sBACD,sBAAMP,UAAWC,IAAQQ,MAAzB,SACG/B,IAHL,aAKSE,GAAKA,EAAE8B,QAAQ,GAAK,uFAE7B,iCACG,sBACD,sBAAMV,UAAWC,IAAQQ,MAAzB,SACG/B,IAHL,aAKSE,IAAM,EAAIA,GAAG8B,QAAQ,GAAK,uFAEvB,IAAXhC,GACD,qCACE,iCACG,sBACD,uBAAMsB,UAAWC,IAAQQ,MAAzB,eACK/B,KAHP,aAKSc,GAAUA,EAAOkB,QAAQ,GAAK,uFAEvC,wBAAQC,QAAShC,EAAjB,+DAqGOiC,EA/FH,WAAO,IAAD,EACgBzB,mBAAS,CAAC,CAAE0B,GAAI,EAAG7B,SAAS,KAD5C,mBACTE,EADS,KACC4B,EADD,OAEU3B,oBAAS,GAFnB,mBAETL,EAFS,KAEFiC,EAFE,OAGE5B,mBAAS,GAHX,mBAGTJ,EAHS,KAGNiC,EAHM,KA6BVC,EAAQ,EAAI/B,EAASW,QAAO,SAACC,EAAaC,GAC9C,OAAKA,EAAQf,QACbc,GAA4BC,EAAQnB,EADPkB,IAG5B,GAEH,OACE,gCACE,gMACA,0GACA,+BACE,oHACA,kGACA,oHACA,qGAEF,uBACA,uBAAME,UAAWC,IAAQF,QAAzB,UACE,8GACA,uBACEG,KAAK,WACLC,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAeW,EAASX,EAAOpB,YAE7CF,GACC,qCACE,wCACA,uBACEoB,KAAK,SACLK,MAAOxB,EACPoB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAeY,EAAKR,WAAWJ,EAAOG,iBAK1DrB,EAASgC,KAAI,WAAqBT,GAArB,IAAGI,EAAH,EAAGA,GAAIjC,EAAP,EAAOA,EAAGI,EAAV,EAAUA,QAAV,OACZ,cAAC,EAAD,CAEEN,OAAQ+B,EAAQ,EAChB9B,OAAQ,YA9DM,SAACkC,GACrBC,GAAY,SAAA5B,GAAQ,OAAIA,EAASiC,QAAO,SAAApB,GAAO,OAAIA,EAAQc,KAAOA,QA6D5CO,CAAcP,IAC9BhC,KAAM,SAACD,GAAD,OA3DD,SAACiC,EAAIjC,GAChBkC,GAAY,SAAA5B,GAAQ,OAAIA,EAASgC,KAAI,SAAAnB,GACnC,OAAIA,EAAQc,KAAOA,EACVQ,OAAOC,OAAO,GAAIvB,EAAS,CAAEnB,MAE7BmB,QAsDQlB,CAAKgC,EAAIjC,IACtBK,WAAY,SAACD,GAAD,OAlDD,SAAC6B,EAAI7B,GACtB8B,GAAY,SAAA5B,GAAQ,OAAIA,EAASgC,KAAI,SAAAnB,GACnC,OAAIA,EAAQc,KAAOA,EACVQ,OAAOC,OAAO,GAAIvB,EAAS,CAAEf,YAE7Be,QA6CoBd,CAAW4B,EAAI7B,IACxCA,QAASA,EACTJ,EAAGA,EACHE,MAAOA,EACPC,EAAGA,EACHG,SAAUA,GATL2B,MAYT,uBACEX,KAAK,SACLK,MAAM,oGACNI,QAAS,WACPG,EAAY,GAAD,mBAAK5B,GAAL,CAAe,CAAE2B,GAAI3B,EAASqC,OAAS,EAAGvC,SAAS,SAGlE,sBAAKgB,UAAWC,IAAQgB,MAAxB,UACG,sBACD,sBAAMjB,UAAWC,IAAQQ,MAAzB,SACG,WAHL,aAKSQ,UCjKAO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCdAc,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,MAAQ,sB","file":"static/js/main.3da00fa7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport classes from './App.module.css'\r\n\r\nconst Barrier = ({ number, remove, P, setP, withH, H, checked, setChecked, barriers }) => {\r\n  const [um, setUm] = useState(0)\r\n  const [fm, setFm] = useState(0)\r\n  const [rangeP, setRangeP] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (um === 0 || fm === 0 || (withH && H === 0)) {\r\n      setP(NaN)\r\n    } else {\r\n      const result = withH\r\n        ? (1 / um) / (1 / um + 1 / fm + 1 / H)\r\n        : (1 / um) / (1 / um + 1 / fm)\r\n      setP(result)\r\n    }\r\n  }, [H, withH, um, fm])\r\n\r\n  useEffect(() => {\r\n    const rangeP = barriers.slice(0, number).reduce((accumulator, barrier) => {\r\n      return accumulator + barrier.P\r\n    }, 0)\r\n    setRangeP(rangeP)\r\n  })\r\n\r\n  return (\r\n    <div className={classes.barrier}>\r\n      <input\r\n        type='checkbox'\r\n        onChange={({ target }) => {\r\n          setChecked(target.checked)\r\n        }}\r\n        disabled={number === 1}\r\n        checked={checked}\r\n      />\r\n      <span>{`Преграда ${number}`}</span>\r\n      <span>um</span>\r\n      <input\r\n        type='number'\r\n        min={0}\r\n        value={um}\r\n        onChange={({ target }) => {\r\n          const value = parseFloat(target.value)\r\n          setUm(value)\r\n        }}/>\r\n      <span>fm</span>\r\n      <input\r\n        type='number'\r\n        min={0}\r\n        value={fm}\r\n        onChange={({ target }) => {\r\n          const value = parseFloat(target.value)\r\n          setFm(value)\r\n        }}/>\r\n      <span>\r\n        {'Pнсд'}\r\n        <span className={classes.index}>\r\n          {number}\r\n        </span>\r\n        {` = ${P ? +P.toFixed(3) : 'Деление на ноль'}`}\r\n      </span>\r\n      <span>\r\n        {'Pзащ'}\r\n        <span className={classes.index}>\r\n          {number}\r\n        </span>\r\n        {` = ${P ? +(1 - P).toFixed(3) : 'Деление на ноль'}`}\r\n      </span>\r\n      {number !== 1 && (\r\n      <>\r\n        <span>\r\n          {'Pзащ'}\r\n          <span className={classes.index}>\r\n            1-{number}\r\n          </span>\r\n          {` = ${rangeP ? +rangeP.toFixed(3) : 'Деление на ноль'}`}\r\n        </span>\r\n        <button onClick={remove}>Удалить</button>\r\n      </>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [barriers, setBarriers] = useState([{ id: 1, checked: true }])\r\n  const [withH, setWithH] = useState(false)\r\n  const [H, setH] = useState(0)\r\n\r\n  const deleteBarrier = (id) => {\r\n    setBarriers(barriers => barriers.filter(barrier => barrier.id !== id))\r\n  }\r\n\r\n  const setP = (id, P) => {\r\n    setBarriers(barriers => barriers.map(barrier => {\r\n      if (barrier.id === id) {\r\n        return Object.assign({}, barrier, { P })\r\n      } else {\r\n        return barrier\r\n      }\r\n    }))\r\n  }\r\n\r\n  const setChecked = (id, checked) => {\r\n    setBarriers(barriers => barriers.map(barrier => {\r\n      if (barrier.id === id) {\r\n        return Object.assign({}, barrier, { checked })\r\n      } else {\r\n        return barrier\r\n      }\r\n    }))\r\n  }\r\n\r\n  const total = 1 - barriers.reduce((accumulator, barrier) => {\r\n    if (!barrier.checked) return accumulator\r\n    accumulator = accumulator * barrier.P\r\n    return accumulator\r\n  }, 1)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Комплекс оценки защищённости</h1>\r\n      <p>Разработчики:</p>\r\n      <ul>\r\n        <li>Овчинникова М. А.</li>\r\n        <li>Ларюшина И. А.</li>\r\n        <li>Комиссарова Е. Г.</li>\r\n        <li>Кувшинов В. Л.</li>\r\n      </ul>\r\n      <hr />\r\n      <span className={classes.barrier}>\r\n        <span>Использовать H</span>\r\n        <input\r\n          type='checkbox'\r\n          onChange={({ target }) => { setWithH(target.checked) }}\r\n        />\r\n        {withH &&\r\n          <>\r\n            <span>H = </span>\r\n            <input\r\n              type='number'\r\n              value={H}\r\n              onChange={({ target }) => { setH(parseFloat(target.value)) }}\r\n            />\r\n          </>\r\n        }\r\n      </span>\r\n      {barriers.map(({ id, P, checked }, index) => (\r\n        <Barrier\r\n          key={id}\r\n          number={index + 1}\r\n          remove={() => { deleteBarrier(id) }}\r\n          setP={(P) => setP(id, P)}\r\n          setChecked={(checked) => setChecked(id, checked)}\r\n          checked={checked}\r\n          P={P}\r\n          withH={withH}\r\n          H={H}\r\n          barriers={barriers}\r\n        />\r\n      ))}\r\n      <input\r\n        type='button'\r\n        value='Добавить преграду'\r\n        onClick={() => {\r\n          setBarriers([...barriers, { id: barriers.length + 1, checked: true }])\r\n        }}\r\n      />\r\n      <div className={classes.total}>\r\n        {'Pзащ'}\r\n        <span className={classes.index}>\r\n          {'∑'}\r\n        </span>\r\n        {` = ${total}`}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barrier\":\"App_barrier__2sWNi\",\"total\":\"App_total__3dELS\",\"index\":\"App_index__3OBss\"};"],"sourceRoot":""}